// <auto-generated />
using System;
using InnoGotchi.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InnoGotchi.DataAccess.Migrations
{
    [DbContext(typeof(InnoGotchiDbContext))]
    [Migration("20230223180949_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.BodyPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BodyPartTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BodyPartTypeId");

                    b.ToTable("BodyParts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyPartTypeId = 1,
                            Image = "~/images/bodies/body_1.svg"
                        },
                        new
                        {
                            Id = 2,
                            BodyPartTypeId = 2,
                            Image = "~/images/noses/nose_1.svg"
                        },
                        new
                        {
                            Id = 3,
                            BodyPartTypeId = 3,
                            Image = "~/images/mouths/mouth_1.svg"
                        },
                        new
                        {
                            Id = 4,
                            BodyPartTypeId = 4,
                            Image = "~/images/eyes/eye_1.svg"
                        },
                        new
                        {
                            Id = 5,
                            BodyPartTypeId = 1,
                            Image = "~/images/bodies/body_2.svg"
                        },
                        new
                        {
                            Id = 6,
                            BodyPartTypeId = 2,
                            Image = "~/images/noses/nose_2.svg"
                        },
                        new
                        {
                            Id = 7,
                            BodyPartTypeId = 3,
                            Image = "~/images/mouths/mouth_2.svg"
                        },
                        new
                        {
                            Id = 8,
                            BodyPartTypeId = 4,
                            Image = "~/images/eyes/eye_2.svg"
                        },
                        new
                        {
                            Id = 9,
                            BodyPartTypeId = 1,
                            Image = "~/images/bodies/body_3.svg"
                        },
                        new
                        {
                            Id = 10,
                            BodyPartTypeId = 2,
                            Image = "~/images/noses/nose_3.svg"
                        },
                        new
                        {
                            Id = 11,
                            BodyPartTypeId = 3,
                            Image = "~/images/mouths/mouth_3.svg"
                        },
                        new
                        {
                            Id = 12,
                            BodyPartTypeId = 4,
                            Image = "~/images/eyes/eye_3.svg"
                        },
                        new
                        {
                            Id = 13,
                            BodyPartTypeId = 1,
                            Image = "~/images/bodies/body_4.svg"
                        },
                        new
                        {
                            Id = 14,
                            BodyPartTypeId = 2,
                            Image = "~/images/noses/nose_4.svg"
                        },
                        new
                        {
                            Id = 15,
                            BodyPartTypeId = 3,
                            Image = "~/images/mouths/mouth_4.svg"
                        },
                        new
                        {
                            Id = 16,
                            BodyPartTypeId = 4,
                            Image = "~/images/eyes/eye_4.svg"
                        },
                        new
                        {
                            Id = 17,
                            BodyPartTypeId = 1,
                            Image = "~/images/bodies/body_5.svg"
                        },
                        new
                        {
                            Id = 18,
                            BodyPartTypeId = 2,
                            Image = "~/images/noses/nose_5.svg"
                        },
                        new
                        {
                            Id = 19,
                            BodyPartTypeId = 3,
                            Image = "~/images/mouths/mouth_5.svg"
                        },
                        new
                        {
                            Id = 20,
                            BodyPartTypeId = 4,
                            Image = "~/images/eyes/eye_5.svg"
                        },
                        new
                        {
                            Id = 21,
                            BodyPartTypeId = 2,
                            Image = "~/images/noses/nose_6.svg"
                        },
                        new
                        {
                            Id = 22,
                            BodyPartTypeId = 4,
                            Image = "~/images/eyes/eye_6.svg"
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.BodyPartPet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BodyPartsId")
                        .HasColumnType("int");

                    b.Property<int>("PetsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BodyPartsId");

                    b.HasIndex("PetsId");

                    b.ToTable("BodyPartPets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyPartsId = 1,
                            PetsId = 1
                        },
                        new
                        {
                            Id = 2,
                            BodyPartsId = 2,
                            PetsId = 1
                        },
                        new
                        {
                            Id = 3,
                            BodyPartsId = 3,
                            PetsId = 1
                        },
                        new
                        {
                            Id = 4,
                            BodyPartsId = 4,
                            PetsId = 1
                        },
                        new
                        {
                            Id = 5,
                            BodyPartsId = 5,
                            PetsId = 2
                        },
                        new
                        {
                            Id = 6,
                            BodyPartsId = 6,
                            PetsId = 2
                        },
                        new
                        {
                            Id = 7,
                            BodyPartsId = 7,
                            PetsId = 2
                        },
                        new
                        {
                            Id = 8,
                            BodyPartsId = 8,
                            PetsId = 2
                        },
                        new
                        {
                            Id = 9,
                            BodyPartsId = 9,
                            PetsId = 3
                        },
                        new
                        {
                            Id = 10,
                            BodyPartsId = 10,
                            PetsId = 3
                        },
                        new
                        {
                            Id = 11,
                            BodyPartsId = 11,
                            PetsId = 3
                        },
                        new
                        {
                            Id = 12,
                            BodyPartsId = 12,
                            PetsId = 3
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.BodyPartType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BodyPartTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Body"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nose"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mouth"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Eye"
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Collaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<int>("IdentityUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdentityUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Farms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdentityUserId = 1,
                            Name = "ConfTestFarm_1"
                        },
                        new
                        {
                            Id = 2,
                            IdentityUserId = 2,
                            Name = "ConfTestFarm_2"
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Feed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FeedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("FoodCount")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int?>("IdentityUserId")
                        .HasColumnType("int");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("WaterCount")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.HasIndex("PetId");

                    b.ToTable("FeedsInfo");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.IdentityRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.IdentityUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdentityRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityRoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("IdentityUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdentityRoleId = 1,
                            Name = "Ilya",
                            Password = "qweqwe",
                            Username = "admin@m.com"
                        },
                        new
                        {
                            Id = 2,
                            IdentityRoleId = 2,
                            Name = "ConfName1",
                            Password = "123456",
                            Surname = "ConfSurname1",
                            Username = "ConfUser1@m.com"
                        },
                        new
                        {
                            Id = 3,
                            IdentityRoleId = 2,
                            Name = "ConfName2",
                            Password = "234567",
                            Surname = "ConfSurname2",
                            Username = "ConfUser2@m.com"
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 1,
                            Name = "ConfTestName_1"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 1,
                            Name = "ConfTestName_2"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 2,
                            Name = "ConfTestName_3"
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.VitalSign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HappinessDaysCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HungerLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsAlive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("ThirstyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.ToTable("VitalSigns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HappinessDaysCount = 0,
                            HungerLevel = 0,
                            IsAlive = false,
                            PetId = 1,
                            ThirstyLevel = 0
                        },
                        new
                        {
                            Id = 2,
                            HappinessDaysCount = 1,
                            HungerLevel = 1,
                            IsAlive = false,
                            PetId = 2,
                            ThirstyLevel = 2
                        },
                        new
                        {
                            Id = 3,
                            HappinessDaysCount = 5,
                            HungerLevel = 2,
                            IsAlive = false,
                            PetId = 3,
                            ThirstyLevel = 1
                        });
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.BodyPart", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.BodyPartType", "BodyPartType")
                        .WithMany()
                        .HasForeignKey("BodyPartTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPartType");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.BodyPartPet", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.BodyPart", "BodyPart")
                        .WithMany()
                        .HasForeignKey("BodyPartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnoGotchi.DataAccess.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyPart");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Collaborator", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnoGotchi.DataAccess.Models.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Farm", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Feed", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("InnoGotchi.DataAccess.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IdentityUser");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.IdentityUser", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("IdentityRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Pet", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.Farm", "Farm")
                        .WithMany("Pets")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.VitalSign", b =>
                {
                    b.HasOne("InnoGotchi.DataAccess.Models.Pet", "Pet")
                        .WithOne("VitalSign")
                        .HasForeignKey("InnoGotchi.DataAccess.Models.VitalSign", "PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Farm", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("InnoGotchi.DataAccess.Models.Pet", b =>
                {
                    b.Navigation("VitalSign")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
